theta_v_aux~dunif(0,1)
theta_d_aux~dunif(0,1)
theta_d <- equals(selector,1)*theta_v+equals(selector,0)*theta_d_aux
theta_v <-
equals(another_selector,1)*1/3+
equals(another_selector,2)*1/2+
equals(another_selector,3)*3/5+
equals(another_selector,4)*theta_v_aux
selector~dbern(0.5)
selector_prior~dbern(0.5)
another_selector~dcat(c(1/4,1/4,1/4,1/4))
another_selector_prior~dcat(c(1/4,1/4,1/4,1/4))
theta_v_aux_prior~dunif(0,1)
theta_d_aux_prior~dunif(0,1)
theta_d_prior <- equals(selector_prior,1)*theta_v_prior+equals(selector_prior,0)*theta_d_aux_prior
theta_v_prior <-
equals(another_selector_prior,1)*1/3+
equals(another_selector_prior,2)*1/2+
equals(another_selector_prior,3)*3/5+
equals(another_selector_prior,4)*theta_v_aux_prior
# Distribución de los Datos:
for(i in 1:n_obs){
v[i]~dbern(theta_v)
d[i]~dbern(theta_d)
v_pospred[i]~dbern(theta_v)
d_pospred[i]~dbern(theta_d)
v_priorpred[i]~dbern(theta_v_prior)
d_priorpred[i]~dbern(theta_d_prior)
}
}','ejemplo5.bug')
# Parámetros
parametros<-c(
'theta_v',
'theta_v_aux',
'theta_d',
'theta_d_aux',
'selector',
'another_selector',
'theta_v_prior',
'theta_d_prior',
'theta_d_aux_prior',
'theta_v_aux_prior',
'selector_prior',
'another_selector_prior',
'v_pospred',
'd_pospred',
'v_priorpred',
'd_priorpred')
# Valores Iniciales
iniciales<-list(
list(theta_v_aux=0.2),
list(theta_v_aux=0.8),
list(theta_v_aux=0.5)
)
# Sampleo
# En esta sección incluímos toda la información necesaria para que jags calcule la(s) distribución(es) posteriores sobre los parámetros de interés:
posteriores_ej5<-jags(
data=datos_jags,
inits=iniciales,
parameters.to.save=parametros,
model.file='ejemplo5.bug',
n.chains=3,
n.iter=2500,
n.burnin=500,
n.thin=2,
DIC=T)
# Resultados
# Extracción de sampleos posteriores de cada parámetro (y distribuciones predictivas):
theta_v<-posteriores_ej5$BUGSoutput$sims.list$theta_v
theta_d<-posteriores_ej5$BUGSoutput$sims.list$theta_d
theta_d_aux<-posteriores_ej5$BUGSoutput$sims.list$theta_d_aux
theta_v_aux<-posteriores_ej5$BUGSoutput$sims.list$theta_v_aux
selector<-posteriores_ej5$BUGSoutput$sims.list$selector
another_selector<-posteriores_ej5$BUGSoutput$sims.list$another_selector
theta_v_prior<-posteriores_ej5$BUGSoutput$sims.list$theta_v_prior
theta_d_aux_prior<-posteriores_ej5$BUGSoutput$sims.list$theta_d_aux_prior
theta_v_aux_prior<-posteriores_ej5$BUGSoutput$sims.list$theta_v_aux_prior
selector_prior<-posteriores_ej5$BUGSoutput$sims.list$selector_prior
another_selector_prior<-posteriores_ej5$BUGSoutput$sims.list$another_selector_prior
v_priorpred<-posteriores_ej5$BUGSoutput$sims.list$v_priorpred
d_priorpred<-posteriores_ej5$BUGSoutput$sims.list$d_priorpred
v_pospred<-posteriores_ej5$BUGSoutput$sims.list$v_pospred
d_pospred<-posteriores_ej5$BUGSoutput$sims.list$d_pospred
base_d <- '#99ee00'
base_v <- '#00cc44'
n_samples <- 100
layout(matrix(1:8,ncol=2,byrow=T))
# Prior predictions
plot(0,type='n',xlim=c(0,length(d)),ylim=c(0,length(d)))
for(ss in 1:n_samples){
lines(1:length(d),cumsum(d_priorpred[ss,]),type='s',col=paste(base_d,'aa',sep=''),lwd=2)
}
plot(0,type='n',xlim=c(0,length(v)),ylim=c(0,length(v)))
for(ss in 1:n_samples){
lines(1:length(v),cumsum(v_priorpred[ss,]),type='s',col=paste(base_v,'aa',sep=''),lwd=2)
}
# Data + posterior distributions
plot(0,type='n',xlim=c(0,length(d)),ylim=c(0,length(d)))
for(ss in 1:n_samples){
lines(1:length(d),cumsum(d_pospred[ss,]),type='s',col=paste(base_d,'aa',sep=''),lwd=2)
}
lines(1:length(d),cumsum(d),type='s',lwd=10)
lines(1:length(d),cumsum(d),type='s',lwd=3,col=base_d)
plot(0,type='n',xlim=c(0,length(v)),ylim=c(0,length(v)))
for(ss in 1:n_samples){
lines(1:length(v),cumsum(v_pospred[ss,]),type='s',col=paste(base_v,'aa',sep=''),lwd=2)
}
lines(1:length(v),cumsum(v),type='s',lwd=10)
lines(1:length(v),cumsum(v),type='s',lwd=3,col=base_v)
# Distribuciones posteriores marginales:
hist(theta_d_aux,breaks=seq(0,1,length.out = 30),col=paste(base_d,'88',sep=''),xlim=c(0,1),border='red')
hist(theta_d_aux_prior,breaks=seq(0,1,length.out = 30),add=T,border='blue',col=paste(base_d,'88',sep=''))
hist(theta_v_aux,breaks=seq(0,1,length.out = 30),col=paste(base_v,'88',sep=''),xlim=c(0,1),border='red')
hist(theta_v_aux_prior,breaks=seq(0,1,length.out = 30),add=T,border='blue',col=paste(base_v,'88',sep=''))
hist(selector_prior,breaks=c(-.25,.25,.75,1.25),col='#00000033',border='blue',ylim=c(0,2750))
hist(selector,breaks=c(-.25,.25,.75,1.25),col='#00000033',border='red',add=T)
hist(another_selector_prior,breaks=seq(.75,4.25,.5),col='#00000033',border='blue',ylim=c(0,2750))
hist(another_selector,breaks=seq(.75,4.25,.5),col='#00000033',border='red',add=T)
theta_v_aux
dim(theta_v_aux)
dim(another_selector)
hist(theta_v_aux[another_selector==4],breaks=seq(0,1,length.out = 30),col=paste(base_v,'88',sep=''),xlim=c(0,1),border='red')
hist(theta_v_aux_prior[another_selector_prior==4],breaks=seq(0,1,length.out = 30),add=T,border='blue',col=paste(base_v,'88',sep=''))
# EJEMPLO 5: MUCHAS observaciones Bernoulli de dos procesos diferentes + diferencia entre tasas
rm(list=ls())
library('R2jags')
# a) Datos
d<-c(0,0,0,1,1,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0)
v<-c(0,1,0,1,0,1,0,1,1,1,0,1,0,0,1,1,1,0,0,1,1,0,1,0,0)
n_obs<-length(d) # El objeto 'n_obs' indica cuántas observaciones recolectamos (asume el mismo número en 'v' y 'd')
datos_jags<-list('v','d','n_obs')
# Modelo A: diferencia de tasas
write('
model{
# Distribución Prior:
theta_v~dunif(0,1)
theta_d~dunif(0,1)
theta_v_prior~dunif(0,1)
theta_d_prior~dunif(0,1)
# Diferencia entre tasas:
dif<-theta_v-theta_d
dif_prior<-theta_v_prior-theta_d_prior
# Distribución de los Datos:
for(i in 1:n_obs){
v[i]~dbern(theta_v)
d[i]~dbern(theta_d)
v_pospred[i]~dbern(theta_v)
d_pospred[i]~dbern(theta_d)
v_priorpred[i]~dbern(theta_v_prior)
d_priorpred[i]~dbern(theta_d_prior)
}
}','ejemplo5.bug')
# Parámetros
parametros<-c(
'theta_v',
'theta_d',
'dif',
'theta_v_prior',
'theta_d_prior',
'dif_prior',
'v_pospred',
'd_pospred',
'v_priorpred',
'd_priorpred')
# Valores Iniciales
iniciales<-list(
list(theta_v=0.2,theta_d=0.3),
list(theta_v=0.8,theta_d=0.8),
list(theta_v=0.5,theta_d=0.6)
)
# Sampleo
# En esta sección incluímos toda la información necesaria para que jags calcule la(s) distribución(es) posteriores sobre los parámetros de interés:
posteriores_ej5<-jags(
data=datos_jags,
inits=iniciales,
parameters.to.save=parametros,
model.file='ejemplo5.bug',
n.chains=3,
n.iter=2500,
n.burnin=500,
n.thin=2,
DIC=T)
# Resultados
# Extracción de sampleos posteriores de cada parámetro (y distribuciones predictivas):
theta_v<-posteriores_ej5$BUGSoutput$sims.list$theta_v
theta_d<-posteriores_ej5$BUGSoutput$sims.list$theta_d
dif<-posteriores_ej5$BUGSoutput$sims.list$dif
theta_v_prior<-posteriores_ej5$BUGSoutput$sims.list$theta_v_prior
theta_d_prior<-posteriores_ej5$BUGSoutput$sims.list$theta_d_prior
dif_prior<-posteriores_ej5$BUGSoutput$sims.list$dif_prior
v_priorpred<-posteriores_ej5$BUGSoutput$sims.list$v_priorpred
d_priorpred<-posteriores_ej5$BUGSoutput$sims.list$d_priorpred
v_pospred<-posteriores_ej5$BUGSoutput$sims.list$v_pospred
d_pospred<-posteriores_ej5$BUGSoutput$sims.list$d_pospred
dim(d_pospred)
length(d)
base_d <- '#99ee00'
base_v <- '#00cc44'
n_samples <- 100
layout(matrix(1:8,ncol=2,byrow=T))
# Prior predictions
plot(0,type='n',xlim=c(0,length(d)),ylim=c(0,length(d)))
for(ss in 1:n_samples){
lines(1:length(d),cumsum(d_priorpred[ss,]),type='s',col=paste(base_d,'aa',sep=''),lwd=2)
}
plot(0,type='n',xlim=c(0,length(v)),ylim=c(0,length(v)))
for(ss in 1:n_samples){
lines(1:length(v),cumsum(v_priorpred[ss,]),type='s',col=paste(base_v,'aa',sep=''),lwd=2)
}
# Data + posterior distributions
plot(0,type='n',xlim=c(0,length(d)),ylim=c(0,length(d)))
for(ss in 1:n_samples){
lines(1:length(d),cumsum(d_pospred[ss,]),type='s',col=paste(base_d,'aa',sep=''),lwd=2)
}
lines(1:length(d),cumsum(d),type='s',lwd=10)
lines(1:length(d),cumsum(d),type='s',lwd=3,col=base_d)
plot(0,type='n',xlim=c(0,length(v)),ylim=c(0,length(v)))
for(ss in 1:n_samples){
lines(1:length(v),cumsum(v_pospred[ss,]),type='s',col=paste(base_v,'aa',sep=''),lwd=2)
}
lines(1:length(v),cumsum(v),type='s',lwd=10)
lines(1:length(v),cumsum(v),type='s',lwd=3,col=base_v)
# Distribuciones posteriores marginales:
hist(theta_d,breaks=seq(0,1,length.out = 30),col=paste(base_d,'88',sep=''),xlim=c(0,1),border='red')
hist(theta_d_prior,breaks=seq(0,1,length.out = 30),add=T,border='blue',col=paste(base_d,'88',sep=''))
hist(theta_v,breaks=seq(0,1,length.out = 30),col=paste(base_v,'88',sep=''),xlim=c(0,1),border='red')
hist(theta_v_prior,breaks=seq(0,1,length.out = 30),add=T,border='blue',col=paste(base_v,'88',sep=''))
# Distribución posterior de la diferencia entre tasas:
# ¿La diferencia entre tasas es creíblemente mayor que cero? (i.e., ¿los parámetros 'theta_v' y 'theta_d' son diferentes? ¿Qué tan probable es que lo sean?)
hist(dif_prior,breaks=seq(-1,1,length.out=30),col='#00000033',border='blue',xlim=c(-1,1),ylim=c(0,800))
hist(dif,breaks=seq(-1,1,length.out=30),col='#00000033',border='red',xlim=c(-1,1),add=T)
quantil_inf<-quantile(dif,probs=0.025)
quantil_sup<-quantile(dif,probs=0.975)
lines(c(quantil_inf,quantil_sup),c(0,0),
lwd=10,col='#dd0000')
# Modelo B: seleccion de modelos (dos hipótesis: ¿las tasas son iguales o diferentes?)
write('
model{
# Distribución Prior:
theta_v~dunif(0,1)
theta_d_aux~dunif(0,1)
theta_d <- equals(selector,1)*theta_v+equals(selector,0)*theta_d_aux
selector~dbern(0.5)
selector_prior~dbern(0.5)
theta_v_prior~dunif(0,1)
theta_d_aux_prior~dunif(0,1)
theta_d_prior <- equals(selector_prior,1)*theta_v_prior+equals(selector_prior,0)*theta_d_aux_prior
# Distribución de los Datos:
for(i in 1:n_obs){
v[i]~dbern(theta_v)
d[i]~dbern(theta_d)
v_pospred[i]~dbern(theta_v)
d_pospred[i]~dbern(theta_d)
v_priorpred[i]~dbern(theta_v_prior)
d_priorpred[i]~dbern(theta_d_prior)
}
}','ejemplo5.bug')
# Parámetros
parametros<-c(
'theta_v',
'theta_d',
'theta_d_aux',
'selector',
'theta_v_prior',
'theta_d_prior',
'theta_d_aux_prior',
'selector_prior',
'v_pospred',
'd_pospred',
'v_priorpred',
'd_priorpred')
# Valores Iniciales
iniciales<-list(
list(theta_v=0.2),
list(theta_v=0.8),
list(theta_v=0.5)
)
# Sampleo
# En esta sección incluímos toda la información necesaria para que jags calcule la(s) distribución(es) posteriores sobre los parámetros de interés:
posteriores_ej5<-jags(
data=datos_jags,
inits=iniciales,
parameters.to.save=parametros,
model.file='ejemplo5.bug',
n.chains=3,
n.iter=2500,
n.burnin=500,
n.thin=2,
DIC=T)
# Resultados
# Extracción de sampleos posteriores de cada parámetro (y distribuciones predictivas):
theta_v<-posteriores_ej5$BUGSoutput$sims.list$theta_v
theta_d<-posteriores_ej5$BUGSoutput$sims.list$theta_d
theta_d_aux<-posteriores_ej5$BUGSoutput$sims.list$theta_d_aux
selector<-posteriores_ej5$BUGSoutput$sims.list$selector
theta_v_prior<-posteriores_ej5$BUGSoutput$sims.list$theta_v_prior
theta_d_aux_prior<-posteriores_ej5$BUGSoutput$sims.list$theta_d_aux_prior
selector_prior<-posteriores_ej5$BUGSoutput$sims.list$selector_prior
v_priorpred<-posteriores_ej5$BUGSoutput$sims.list$v_priorpred
d_priorpred<-posteriores_ej5$BUGSoutput$sims.list$d_priorpred
v_pospred<-posteriores_ej5$BUGSoutput$sims.list$v_pospred
d_pospred<-posteriores_ej5$BUGSoutput$sims.list$d_pospred
base_d <- '#99ee00'
base_v <- '#00cc44'
n_samples <- 100
layout(matrix(1:8,ncol=2,byrow=T))
# Prior predictions
plot(0,type='n',xlim=c(0,length(d)),ylim=c(0,length(d)))
for(ss in 1:n_samples){
lines(1:length(d),cumsum(d_priorpred[ss,]),type='s',col=paste(base_d,'aa',sep=''),lwd=2)
}
plot(0,type='n',xlim=c(0,length(v)),ylim=c(0,length(v)))
for(ss in 1:n_samples){
lines(1:length(v),cumsum(v_priorpred[ss,]),type='s',col=paste(base_v,'aa',sep=''),lwd=2)
}
# Data + posterior distributions
plot(0,type='n',xlim=c(0,length(d)),ylim=c(0,length(d)))
for(ss in 1:n_samples){
lines(1:length(d),cumsum(d_pospred[ss,]),type='s',col=paste(base_d,'aa',sep=''),lwd=2)
}
lines(1:length(d),cumsum(d),type='s',lwd=10)
lines(1:length(d),cumsum(d),type='s',lwd=3,col=base_d)
plot(0,type='n',xlim=c(0,length(v)),ylim=c(0,length(v)))
for(ss in 1:n_samples){
lines(1:length(v),cumsum(v_pospred[ss,]),type='s',col=paste(base_v,'aa',sep=''),lwd=2)
}
lines(1:length(v),cumsum(v),type='s',lwd=10)
lines(1:length(v),cumsum(v),type='s',lwd=3,col=base_v)
# Distribuciones posteriores marginales:
hist(theta_d,breaks=seq(0,1,length.out = 30),col=paste(base_d,'88',sep=''),xlim=c(0,1),border='red')
hist(theta_d_prior,breaks=seq(0,1,length.out = 30),add=T,border='blue',col=paste(base_d,'88',sep=''))
hist(theta_v,breaks=seq(0,1,length.out = 30),col=paste(base_v,'88',sep=''),xlim=c(0,1),border='red')
hist(theta_v_prior,breaks=seq(0,1,length.out = 30),add=T,border='blue',col=paste(base_v,'88',sep=''))
hist(theta_d_aux,breaks=seq(0,1,length.out = 30),col=paste(base_d,'88',sep=''),xlim=c(0,1),border='red')
hist(theta_d_aux_prior,breaks=seq(0,1,length.out = 30),add=T,border='blue',col=paste(base_d,'88',sep=''))
hist(selector_prior,breaks=c(-.25,.25,.75,1.25),col='#00000033',border='blue',ylim=c(0,2750))
hist(selector,breaks=c(-.25,.25,.75,1.25),col='#00000033',border='red',add=T)
# Modelo C: seleccion de modelos (varias hipótesis: ¿las tasas son iguales o diferentes a tres valores específicos?)
write('
model{
# Distribución Prior:
theta_v_aux~dunif(0,1)
theta_d_aux~dunif(0,1)
theta_d <- equals(selector,1)*theta_v+equals(selector,0)*theta_d_aux
theta_v <-
equals(another_selector,1)*1/3+
equals(another_selector,2)*1/2+
equals(another_selector,3)*3/5+
equals(another_selector,4)*theta_v_aux
selector~dbern(0.5)
selector_prior~dbern(0.5)
another_selector~dcat(c(1/4,1/4,1/4,1/4))
another_selector_prior~dcat(c(1/4,1/4,1/4,1/4))
theta_v_aux_prior~dunif(0,1)
theta_d_aux_prior~dunif(0,1)
theta_d_prior <- equals(selector_prior,1)*theta_v_prior+equals(selector_prior,0)*theta_d_aux_prior
theta_v_prior <-
equals(another_selector_prior,1)*1/3+
equals(another_selector_prior,2)*1/2+
equals(another_selector_prior,3)*3/5+
equals(another_selector_prior,4)*theta_v_aux_prior
# Distribución de los Datos:
for(i in 1:n_obs){
v[i]~dbern(theta_v)
d[i]~dbern(theta_d)
v_pospred[i]~dbern(theta_v)
d_pospred[i]~dbern(theta_d)
v_priorpred[i]~dbern(theta_v_prior)
d_priorpred[i]~dbern(theta_d_prior)
}
}','ejemplo5.bug')
# Parámetros
parametros<-c(
'theta_v',
'theta_v_aux',
'theta_d',
'theta_d_aux',
'selector',
'another_selector',
'theta_v_prior',
'theta_d_prior',
'theta_d_aux_prior',
'theta_v_aux_prior',
'selector_prior',
'another_selector_prior',
'v_pospred',
'd_pospred',
'v_priorpred',
'd_priorpred')
# Valores Iniciales
iniciales<-list(
list(theta_v_aux=0.2),
list(theta_v_aux=0.8),
list(theta_v_aux=0.5)
)
# Sampleo
# En esta sección incluímos toda la información necesaria para que jags calcule la(s) distribución(es) posteriores sobre los parámetros de interés:
posteriores_ej5<-jags(
data=datos_jags,
inits=iniciales,
parameters.to.save=parametros,
model.file='ejemplo5.bug',
n.chains=3,
n.iter=2500,
n.burnin=500,
n.thin=2,
DIC=T)
# Resultados
# Extracción de sampleos posteriores de cada parámetro (y distribuciones predictivas):
theta_v<-posteriores_ej5$BUGSoutput$sims.list$theta_v
theta_d<-posteriores_ej5$BUGSoutput$sims.list$theta_d
theta_d_aux<-posteriores_ej5$BUGSoutput$sims.list$theta_d_aux
theta_v_aux<-posteriores_ej5$BUGSoutput$sims.list$theta_v_aux
selector<-posteriores_ej5$BUGSoutput$sims.list$selector
another_selector<-posteriores_ej5$BUGSoutput$sims.list$another_selector
theta_v_prior<-posteriores_ej5$BUGSoutput$sims.list$theta_v_prior
theta_d_aux_prior<-posteriores_ej5$BUGSoutput$sims.list$theta_d_aux_prior
theta_v_aux_prior<-posteriores_ej5$BUGSoutput$sims.list$theta_v_aux_prior
selector_prior<-posteriores_ej5$BUGSoutput$sims.list$selector_prior
another_selector_prior<-posteriores_ej5$BUGSoutput$sims.list$another_selector_prior
v_priorpred<-posteriores_ej5$BUGSoutput$sims.list$v_priorpred
d_priorpred<-posteriores_ej5$BUGSoutput$sims.list$d_priorpred
v_pospred<-posteriores_ej5$BUGSoutput$sims.list$v_pospred
d_pospred<-posteriores_ej5$BUGSoutput$sims.list$d_pospred
base_d <- '#99ee00'
base_v <- '#00cc44'
n_samples <- 100
layout(matrix(1:8,ncol=2,byrow=T))
# Prior predictions
plot(0,type='n',xlim=c(0,length(d)),ylim=c(0,length(d)))
for(ss in 1:n_samples){
lines(1:length(d),cumsum(d_priorpred[ss,]),type='s',col=paste(base_d,'aa',sep=''),lwd=2)
}
plot(0,type='n',xlim=c(0,length(v)),ylim=c(0,length(v)))
for(ss in 1:n_samples){
lines(1:length(v),cumsum(v_priorpred[ss,]),type='s',col=paste(base_v,'aa',sep=''),lwd=2)
}
# Data + posterior distributions
plot(0,type='n',xlim=c(0,length(d)),ylim=c(0,length(d)))
for(ss in 1:n_samples){
lines(1:length(d),cumsum(d_pospred[ss,]),type='s',col=paste(base_d,'aa',sep=''),lwd=2)
}
lines(1:length(d),cumsum(d),type='s',lwd=10)
lines(1:length(d),cumsum(d),type='s',lwd=3,col=base_d)
plot(0,type='n',xlim=c(0,length(v)),ylim=c(0,length(v)))
for(ss in 1:n_samples){
lines(1:length(v),cumsum(v_pospred[ss,]),type='s',col=paste(base_v,'aa',sep=''),lwd=2)
}
lines(1:length(v),cumsum(v),type='s',lwd=10)
lines(1:length(v),cumsum(v),type='s',lwd=3,col=base_v)
# Distribuciones posteriores marginales:
hist(theta_d_aux,breaks=seq(0,1,length.out = 30),col=paste(base_d,'88',sep=''),xlim=c(0,1),border='red')
hist(theta_d_aux_prior,breaks=seq(0,1,length.out = 30),add=T,border='blue',col=paste(base_d,'88',sep=''))
hist(theta_v_aux,breaks=seq(0,1,length.out = 30),col=paste(base_v,'88',sep=''),xlim=c(0,1),border='red')
hist(theta_v_aux_prior,breaks=seq(0,1,length.out = 30),add=T,border='blue',col=paste(base_v,'88',sep=''))
# hist(theta_v_aux[another_selector==4],breaks=seq(0,1,length.out = 30),col=paste(base_v,'88',sep=''),xlim=c(0,1),border='red')
# hist(theta_v_aux_prior[another_selector_prior==4],breaks=seq(0,1,length.out = 30),add=T,border='blue',col=paste(base_v,'88',sep=''))
hist(selector_prior,breaks=c(-.25,.25,.75,1.25),col='#00000033',border='blue',ylim=c(0,2750))
hist(selector,breaks=c(-.25,.25,.75,1.25),col='#00000033',border='red',add=T)
hist(another_selector_prior,breaks=seq(.75,4.25,.5),col='#00000033',border='blue',ylim=c(0,2750))
hist(another_selector,breaks=seq(.75,4.25,.5),col='#00000033',border='red',add=T)
library(hpmp)
start_poster
?sta
3/2.54
.98*2.54
.98*2.5
.99*2.54
quit()
install.packages('R2jags')
install.packages('R2jags')
6/8
7/8
install.packages('DBI')
UCBAdmissions
class(UCBAdmissions)
dim(UCBAdmissions)
UCBAdmissions[,,]
UCBAdmissions[,,3]
getwd()
setwd('/Users/Luis/Documents/Luis/Teaching Projects/iad_2_6104/')
dir()
write.csv(UCBAdmissions,'BerkeleyAdmissions1973.csv')
names(UCBAdmissions)
colnames(UCBAdmissions)
rownames(UCBAdmissions)
attr(UCBAdmissions)
class(UCBAdmissions)
names(UCBAdmissions)
dimnames(UCBAdmissions)
UCBAdmissions$Admit
UCBAdmissions[[]]
UCBAdmissions[[1]]
dimnames(UCBAdmissions)[1]
names(dimnames(UCBAdmissions)[1])
names(dimnames(UCBAdmissions)[1]) <- "Result"
dimnames(UCBAdmissions)
names(dimnames(UCBAdmissions)[1])
names(dimnames(UCBAdmissions)[1]) <- "Result"
names(dimnames(UCBAdmissions)[1]) <- "Result"
names(dimnames(UCBAdmissions)[1])
UCB <- read.csv('BerkeleyAdmissions1973.csv')
UCB
UCB <- UCB[,-1]
UCB
names(UCB)[1] <- "Result"
UCB
names(UCB)[3] <- "Department"
names(UCB)[4] <- "People"
UCB
write.csv(UCB,'BerkeleyAdmissions1973.csv',row.names = F)
getwd()
